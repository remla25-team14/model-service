name: Release Model-Service

on:
  push:
    tags:
      - 'v*.*.*'    # Trigger on version tags like v0.1.0, v1.2.3
  pull_request:
    branches: [ main ]  # Run build-and-push on PRs targeting main for testing
  workflow_dispatch:     # Allow manual runs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write    # to push commits
      packages: write    # to push Docker images
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # needed for git tag history

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (for multi-platform builds)
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }} # only push on tag or manual
          tags: |
            ghcr.io/${{ github.repository_owner }}/model-service:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/model-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release-and-bump:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub Release (stable)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine next prerelease version
        id: next_prerelease
        run: |
          version=${{ github.ref_name#v }}
          next=$(echo "$version" | awk -F. '{printf "%d.%d.%d-rc.1", $1, $2, $3+1}')
          echo "next_release=v$next" >> $GITHUB_OUTPUT

      - name: Bump version in metadata
        run: |
          echo "${{ steps.next_prerelease.outputs.next_release }}" > VERSION
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "chore: bump to prerelease ${{ steps.next_prerelease.outputs.next_release }}"
          git tag ${{ steps.next_prerelease.outputs.next_release }}
          git push origin HEAD:main --follow-tags

      - name: Create prerelease GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.next_prerelease.outputs.next_release }}
          name: Pre-release ${{ steps.next_prerelease.outputs.next_release }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}